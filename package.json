{
  "name": "bolt",
  "description": "An AI Agent",
  "private": true,
  "license": "MIT",
  "sideEffects": false,
  "type": "module",
  "version": "1.0.0",
  "author": {
    "name": "bolt.diy team",
    "email": "maintainers@bolt.diy"
  },
  "scripts": {
    "deploy": "npm run build && wrangler pages deploy",
    "build": "remix vite:build",
    "dev": "node pre-start.cjs  && remix vite:dev",
    "test": "vitest --run",
    "test:watch": "vitest",
    "lint": "eslint --cache --cache-location ./node_modules/.cache/eslint app",
    "lint:fix": "npm run lint -- --fix && prettier app --write",
    "start:windows": "wrangler pages dev ./build/client",
    "start:unix": "bindings=$(./bindings.sh) && wrangler pages dev ./build/client $bindings",
    "start": "node -e \"const { spawn } = require('child_process'); const isWindows = process.platform === 'win32'; const cmd = isWindows ? 'npm run start:windows' : 'npm run start:unix'; const child = spawn(cmd, { shell: true, stdio: 'inherit' }); child.on('exit', code => process.exit(code));\"",

    "start:server": "node build/server/index.js",

    "dockerrun": "docker run -it -d --name bolt-ai-live -p 3000:3000 --env-file .env.local betterbolt:prod",
    "dockerbuild:prod": "docker build -t betterbolt:prod --target runtime .",
    "dockerbuild": "docker build -t betterbolt:dev --target build .",

    "typecheck": "tsc",
    "typegen": "wrangler types",
    "preview": "pnpm run build && pnpm run start:server",
    "prepare": "husky",
    "clean": "node scripts/clean.js",
    "electron:build:deps": "concurrently \"pnpm electron:build:main\" \"pnpm electron:build:preload\" --kill-others-on-fail",
    "electron:build:main": "vite build --config ./electron/main/vite.config.ts",
    "electron:build:preload": "vite build --config ./electron/preload/vite.config.ts",
    "electron:build:renderer": "remix vite:build --config vite-electron.config.js",
    "electron:build:unpack": "rm -rf dist && pnpm electron:build:renderer && pnpm electron:build:deps && electron-builder --dir",
    "electron:build:mac": "rm -rf dist && pnpm electron:build:renderer && pnpm electron:build:deps && electron-builder --mac",
    "electron:build:win": "rm -rf dist && pnpm electron:build:renderer && pnpm electron:build:deps && electron-builder --win",
    "electron:build:linux": "rm -rf dist && pnpm electron:build:renderer && pnpm electron:build:deps && electron-builder --linux",
    "electron:build:dist": "rm -rf dist && pnpm electron:build:renderer && pnpm electron:build:deps && electron-builder --mwl"
  },
  "engines": {
    "node": ">=18.18.0"
  },
  "dependencies": { /* unchanged from yours */ },
  "devDependencies": {
    /* unchanged, including "wrangler" for local dev */
  },
  "resolutions": {
    "@typescript-eslint/utils": "^8.0.0-alpha.30"
  },
  "packageManager": "pnpm@9.14.4"
}
